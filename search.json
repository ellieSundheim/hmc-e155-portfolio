[
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "This website was created as part of E155: Microprocessors, taught at Harvey Mudd College in Fall 2024 by Prof. Brake. The course website is found here."
  },
  {
    "objectID": "posts/week4-post.html",
    "href": "posts/week4-post.html",
    "title": "Week 4 Reflection",
    "section": "",
    "text": "The project proposal is coming up and I’m taking stock of what ideas I have so far. To be honest, I’m not in love with any of the ones I have right now as they exist, but they’re a starting point. Prof Brake’s criteria are that it uses the MCU and FPGA meaningfully; my criteria are that I think it’s fun and/or cool enough to spend a few late nights on; project partner Daniel’s criteria are that it doesn’t take a lot of distracting mechanical aspects. The following in no particular order are my ideas and how they fit into everyone’s requirements for the project."
  },
  {
    "objectID": "posts/week4-post.html#build-a-zhu-zhu-pet",
    "href": "posts/week4-post.html#build-a-zhu-zhu-pet",
    "title": "Week 4 Reflection",
    "section": "Build-A-Zhu Zhu Pet",
    "text": "Build-A-Zhu Zhu Pet\nThese cute little guys were incredibly popular when I was in second grade. They also seem like something I would be able to build myself from scratch now that I’m in the 16th grade.\nWhich new hardware? Motor, small speaker\nUses the FPGA? Yes, probably a FSM to track which noises it should be making based on nose button presses and if it should be moving based on back button presses\nUses the MCU? Yes, to control the motor and speaker\nIs useful or interesting? I really liked them when I was 7 at least\nInvolves a lot of mechanical acessories? Maybe…depends on how cute we want them to be"
  },
  {
    "objectID": "posts/week4-post.html#hamster-treadmill",
    "href": "posts/week4-post.html#hamster-treadmill",
    "title": "Week 4 Reflection",
    "section": "Hamster Treadmill",
    "text": "Hamster Treadmill\nThere may or may not have been a theme when I asked the dinner table what I should do for this project. I can buy a hamster at Petsmart since I’m over 18. This is a functional treadmill with normal displays for distance and pace and controls for speed and incline.\nWhich new hardware? Motor, LED display\nUses the FPGA? Yes, needs to respond to input (up/down buttons) and output LEDs to show progress\nUses the MCU? Yes, to control the motors and maybe do some of the hard math about elapsed pace\nIs useful or interesting? Is a funny idea but loses a lot of appeal once Prof Brake and/or the IRB committee vetos the live hamster\nInvolves a lot of mechanical acessories? Treadmill structure, belt, two motors"
  },
  {
    "objectID": "posts/week4-post.html#balancing-triple-pendulum",
    "href": "posts/week4-post.html#balancing-triple-pendulum",
    "title": "Week 4 Reflection",
    "section": "Balancing Triple Pendulum",
    "text": "Balancing Triple Pendulum\nThe only serious suggestion made. These people already did this so I’m not sure what we could do better/differently. We would still learn a lot by just trying to reverse engineer it but we should probably have a better reason before we commit to it.\n\nWhich new hardware? Motors, accelerometers?/other sensors?\nUses the FPGA/MCU? Not sure which one does which task(s) but probably both, FPGA for anything that needs to be done fast and MCU for beefier calculations\nIs useful or interesting? Is an interesting control problem but unclear if it can A) hold my attention long enough or B) attract visitors on demo day\nInvolves a lot of mechanical acessories? Three bars/pivots, track"
  },
  {
    "objectID": "posts/first-post.html",
    "href": "posts/first-post.html",
    "title": "Learning Goals",
    "section": "",
    "text": "This semester, I want to learn everything there is to know in the whole world about embedded systems! Perhaps more realistically, I would like to understand the basics of programming FPGAs (and why it is complicated enough to be a complete job title). I also want to get more hands-on practice with digital design and to make a cool project that I can show off to my friends at Demo Day.\nNote: I’m already learning things! Thing #1: While making this website, I learned that whitespaces can mess up markdown. Thing #2: I avoided a problem with Github Authentication by choosing the coward’s route and using github desktop. Really, I probably have three or four half-understood and ill-advised config settings from previous projects over the lifetime of this laptop and I suspect to address the root causes I should wipe it and start fresh."
  },
  {
    "objectID": "labs/lab1/index.html",
    "href": "labs/lab1/index.html",
    "title": "Lab 1: Board Assembly and Test",
    "section": "",
    "text": "(Editor’s Note: This lab was updated onn 9/9 to reflect changes made in hopes of acheiving an excellence rating. The original of this page as it was when first submitted can be found on the website Github repo.)"
  },
  {
    "objectID": "labs/lab1/index.html#summary",
    "href": "labs/lab1/index.html#summary",
    "title": "Lab 1: Board Assembly and Test",
    "section": "Summary",
    "text": "Summary\nThe main goal of this assignement was to familiarize myself with all the tools that I will be using this semester. In this lab, I soldered and tested my development board. I also installed all the software programs I will need, making my GitHub repositories, and learned what the workflow is. Finally, I dusted off my SystemVerilog skills by programming a seven-segment LED display that will display all the hex digits (0x0 to 0xF)."
  },
  {
    "objectID": "labs/lab1/index.html#design-approach",
    "href": "labs/lab1/index.html#design-approach",
    "title": "Lab 1: Board Assembly and Test",
    "section": "Design Approach",
    "text": "Design Approach\nTo design the seven-segment display, I started with the given inputs and outputs of the system. The oscillator module uses the onboard high speed oscillator (HSOSC) which was configured to run at 24 Mhz and then divided down to 2.4 Hz for led[2]. The led module uses the clock because it has a counter, but the rest of the LEDs use combinational logic. The seven-segment display is its own module for reusability. \nThe schematic shows all the connections to the FPGA. The DIP switches were configured to use internal 100 kOhm pull-up resistors. Putting the same resistor on each line made it so that each LED got the same amount of current running through it. The resistor was chosen so that the current on each segment was no more than 20 mA (which is giving plenty of headroom according to the datasheet, which on page 2, Table “Absolute Maximum Ratings” says 30 mA is the limit.) \\((3.3V - 0.7V)/20 mA = 130 \\Omega\\). I used 150 Ohm resistors because they were available."
  },
  {
    "objectID": "labs/lab1/index.html#testing-approach",
    "href": "labs/lab1/index.html#testing-approach",
    "title": "Lab 1: Board Assembly and Test",
    "section": "Testing Approach",
    "text": "Testing Approach\nI tested my code using an automated testbench. The clock just needed to be shown to oscillate to pass. The seven_segment_display was tested with each value from 0x0 to 0xF and compared to the truth table. The led logic was checked by passing in each of the 4 cases for each combination. The first screenshot shows the oscillator and seven_segment logic; the second screenshot is a much longer timespan to show the 2.4Hz logic for led[2] based on counter[24]."
  },
  {
    "objectID": "labs/lab1/index.html#requirements",
    "href": "labs/lab1/index.html#requirements",
    "title": "Lab 1: Board Assembly and Test",
    "section": "Requirements",
    "text": "Requirements\nMy lab meets both the Proficiency and the Excellence specs. If I were to continue to spend time on it, I would note that while the brightness is equal for all numbers, it is equally dim. I think it should be brighter but I might just need to power it off the 5V rail.\nNumber of hours spent: 15 + 2"
  },
  {
    "objectID": "labs/lab1/index.html#comments-for-next-time",
    "href": "labs/lab1/index.html#comments-for-next-time",
    "title": "Lab 1: Board Assembly and Test",
    "section": "Comments for next time",
    "text": "Comments for next time\nI thought that I had started early enough, but I was incorrect! Part of that might have been the fact that I spent somewhere around 5-6 hours on the quarto assignement from the first week, which ate into my time for this lab. I’m fixing this problem by starting earlier this upcoming week. Also, I learned that reading over the lab specs will not give me a full idea of what the lab entails - I was excited to get started on my seven-segment display and the amount of demo tutorials hidden under the heading “Testing Your Board” caught me off guard. I’m fixing this issue by printing the lab on paper next week so I can see the whole thing and gauge accordingly. This lab was waaaay easier the second time around when I fixed it for excellence after completing lab 2. I think I just needed more practice with the tools and workflow to be comfortable with it."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "E155 Blog",
    "section": "",
    "text": "Week 4 Reflection\n\n\n\n\n\nTrying to think of a cool final project\n\n\n\n\n\nSep 27, 2024\n\n\nEllie Sundheim\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 1 Reflection\n\n\n\n\n\nSome lessons were learned…\n\n\n\n\n\nSep 6, 2024\n\n\nEllie Sundheim\n\n\n\n\n\n\n\n\n\n\n\n\nLearning Goals\n\n\n\n\n\nAnswers to the question ‘what do I want to get out of this class?’\n\n\n\n\n\nAug 26, 2024\n\n\nEllie Sundheim\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "E155 Portfolio",
    "section": "",
    "text": "Hi! I’m Ellie, a senior at Harvey Mudd College studying engineering. I’m interested in all things aerospace but especially robotic exploration. Given the chance, I would go to the Moon or Mars, with the caveat that it be a round-trip ticket."
  },
  {
    "objectID": "labs/lab2/index.html",
    "href": "labs/lab2/index.html",
    "title": "Lab 2: Multiplexed Seven Segment Displays",
    "section": "",
    "text": "The main goal of this assignement was learn how to multiplex hardware in order to use fewer FPGA input/output pins to drive two seven segment displays simaultaneously. I also learned how to write a testbench in SystemVerilog and how to design modularly."
  },
  {
    "objectID": "labs/lab2/index.html#summary",
    "href": "labs/lab2/index.html#summary",
    "title": "Lab 2: Multiplexed Seven Segment Displays",
    "section": "",
    "text": "The main goal of this assignement was learn how to multiplex hardware in order to use fewer FPGA input/output pins to drive two seven segment displays simaultaneously. I also learned how to write a testbench in SystemVerilog and how to design modularly."
  },
  {
    "objectID": "labs/lab2/index.html#design-and-testing-methodology",
    "href": "labs/lab2/index.html#design-and-testing-methodology",
    "title": "Lab 2: Multiplexed Seven Segment Displays",
    "section": "Design and Testing Methodology",
    "text": "Design and Testing Methodology\nThe FPGA pins can only handle \\(8 \\mu A\\) of current (source: Table 4.17, row 3V3 in the FPGA datasheet). The resistors were chosen to keep them under this limit with a simple Ohm’s Law calculation.\nFor LEDS: \\(3.3V/8 mA =  413 \\Omega.\\) -&gt; rounded to \\(470 \\Omega\\).\nThe gate current \\(i_b\\) is supposed to be no more than 8 mA, so using $ i_b = /frac{V_in - 0.7V}{R_b}$, the gate resistor should be \\(R_b = 325\\Omega\\). With some margin and using common resistor sizes, I used \\(330 \\Omega\\).\nThe large current \\(I_c\\) flowing through the transistor is limited to 200 mA by its datasheet, “MAXIMUM RATINGS” table on page 1. Choosing a factor of safety of 2 means we want 100 mA through each. \\(5V/ 100 mA = 50 \\Omega\\) -&gt; used \\(68 \\Omega\\) because that was available.\nFor each anode, we cannot exceed more than 30 mA per segment - since we’re now powering them with 5V, \\(R = (5V - 0.7V)/ 0.03 A = 143 \\Omega\\). I left them as they were from last week (\\(150 \\Omega\\)) because that was close enough.\nHumans can only see flickering up to about 90 Hz (source). This corresponded to a divider of approximately 2^18, but when I implemented it I could see a small amount so I sped up the switching by a factor of 4 (2^16 counter) which got rid of the flicker without causing bleeding from switching too fast for the transistors to cut off power to the dark anode."
  },
  {
    "objectID": "labs/lab2/index.html#technical-documentation",
    "href": "labs/lab2/index.html#technical-documentation",
    "title": "Lab 2: Multiplexed Seven Segment Displays",
    "section": "Technical Documentation",
    "text": "Technical Documentation\nThe source code for this lab can be found here.\n\nBlock Diagram\n\n\n\nLab 2 Block Diagram\n\n\nThe top level is structural Verilog, which instantiates the 4 other modules. The seven segment module and the clock module are the same as in last week’s lab.\n\n\nSchematic\n\n\n\nLab 2 Schematic\n\n\nThe schematic shows how the physical connections were made. Note that the second DIP switch block is on the development board and hardwired to the FPGA pins that it connects to."
  },
  {
    "objectID": "labs/lab2/index.html#results-and-discussion",
    "href": "labs/lab2/index.html#results-and-discussion",
    "title": "Lab 2: Multiplexed Seven Segment Displays",
    "section": "Results and Discussion",
    "text": "Results and Discussion\n\nTestbench\nThe testbench was especially key for tracking down the clock signal and making sure things were triggering at the right time. I learned that ModelSim will default to picoseconds, not nanoseconds, which I figured out when I didn’t see reset finish its initial pulse. I didn’t bother to test the seven segment module again as it didn’t change from last week’s code.  \nGoing forward, I should probably use testvectors with my testbench, but I appreciated the simple way of just forcing values and pausing as a nice transition from the manual way I did originally.\nOne thing that would be nice to add is to have only one signal for digit selection. I could do this by changing one of the transistors to be active low instead of active high and connecting the same digit selection signal to the gates of the transistors for both anodes. Also, it wouldn’t hurt to use a synchronizer for the inputs."
  },
  {
    "objectID": "labs/lab2/index.html#conclusion",
    "href": "labs/lab2/index.html#conclusion",
    "title": "Lab 2: Multiplexed Seven Segment Displays",
    "section": "Conclusion",
    "text": "Conclusion\nThe design works as intended to display two seven-segment numbers using a single set of FPGA pins. I spent roughly 15 hours on this lab. (Fri: 4, Sat: 5, Sun: 3, Mon: 3)\nLicensing really sucks - I wish we had used our first week’s lab time to do a synchronous (with Prof) downloading session and also demo it once for the group before we each followed the written demos on our own. I think I would’ve known better what to expect and I keep learning things that weren’t in the instructions but that are kind of important. Case in point: if you have a testbench, you have to specify not to synthesize it. I understood it conceptually from class but didn’t know how to actually disntinguish between non- and synthesizable modules in Radiant."
  },
  {
    "objectID": "labs.html#lab-2-multiplexed-7-segment-display",
    "href": "labs.html#lab-2-multiplexed-7-segment-display",
    "title": "Labs",
    "section": "Lab 2: Multiplexed 7-Segment Display",
    "text": "Lab 2: Multiplexed 7-Segment Display"
  },
  {
    "objectID": "labs.html#lab-3-keypad-scanner",
    "href": "labs.html#lab-3-keypad-scanner",
    "title": "Labs",
    "section": "Lab 3: Keypad Scanner",
    "text": "Lab 3: Keypad Scanner"
  },
  {
    "objectID": "labs.html#lab-4-arm-assembly-sort",
    "href": "labs.html#lab-4-arm-assembly-sort",
    "title": "Labs",
    "section": "Lab 4: ARM Assembly Sort",
    "text": "Lab 4: ARM Assembly Sort"
  },
  {
    "objectID": "labs.html#lab-5-digital-audio",
    "href": "labs.html#lab-5-digital-audio",
    "title": "Labs",
    "section": "Lab 5: Digital Audio",
    "text": "Lab 5: Digital Audio"
  },
  {
    "objectID": "labs.html#lab-6-the-iot-and-spi",
    "href": "labs.html#lab-6-the-iot-and-spi",
    "title": "Labs",
    "section": "Lab 6: The IOT and SPI",
    "text": "Lab 6: The IOT and SPI"
  },
  {
    "objectID": "labs.html#lab-7-the-advanced-encryption-standard",
    "href": "labs.html#lab-7-the-advanced-encryption-standard",
    "title": "Labs",
    "section": "Lab 7: The Advanced Encryption Standard",
    "text": "Lab 7: The Advanced Encryption Standard"
  },
  {
    "objectID": "posts/lab1-post.html",
    "href": "posts/lab1-post.html",
    "title": "Week 1 Reflection",
    "section": "",
    "text": "At the beginning of the semester, I said that I wanted to develop better judgement. A week later, the judgement was more so a technical skill that I hoped to develop by gaining familiarity with all the pieces that go into being a digital designer. I imagined that I would neutrally know what everything should do and how to make it do that. This was probably a naive way to conceptualize this trait. Really, judgement will comes as I make mistakes. This isn’t the first time I’ve come across this thought, but it is the difference in mindset between a start of year prompt (when the world is wide open) and 15 hours in the lab later. I’m okay with making mistakes, but I think I should start making them sooner and faster and stop making the same ones (looking at you, GitHub). Hardly groundbreaking, but I seem to have to relearn it more often than I care to admit.\nAnyhow, I remembered as I was working how much I enjoyed working with Verilog back in E85. Programming is fine, but I appreciate that this is not programming - it is hardware designing. I like how I can design each module and then all I have to do is put them in the same place with the same signal names. It’s like breadboarding, but better: I don’t have to flip back and forth between two datasheets to get all the correct pin numbers. My goal for this upcoming week is to learn how to write a testbench."
  }
]