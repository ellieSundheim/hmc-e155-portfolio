---
title: "Lab 1: Board Assembly and Test"
about:
    template: jolla
    links:
        - icon: github
          text: Github
          href: https://github.com/ellieSundheim/microPs-lab1
---
(Editor's Note: This lab was updated onn 9/9 to reflect changes made in hopes of acheiving an excellence rating. The original of this page as it was when first submitted can be found on the [website Github repo](https://github.com/ellieSundheim/hmc-e155-portfolio).)

## Summary
The main goal of this assignement was to familiarize myself with all the tools that I will be using this semester. In this lab, I soldered and tested my development board. I also installed all the software programs I will need, making my GitHub repositories, and learned what the workflow is. Finally, I dusted off my SystemVerilog skills by programming a seven-segment LED display that will display all the hex digits (0x0 to 0xF).

## Design Approach
To design the seven-segment display, I started with the given inputs and outputs of the system. The oscillator module uses the onboard high speed oscillator (HSOSC) which was configured to run at 24 Mhz and then divided down to 2.4 Hz for led[2]. The led module uses the clock because it has a counter, but the rest of the LEDs use combinational logic. The seven-segment display is its own module for reusability.
![New block diagram](./images/lab01_block_diagram_redo.jpg)

The schematic shows all the connections to the FPGA. The DIP switches were configured to use internal 100 kOhm pull-up resistors. Putting the same resistor on each line made it so that each LED got the same amount of current running through it. The resistor was chosen so that the current on each segment was no more than 20 mA (which is giving plenty of headroom according to the datasheet, which on page 2, Table "Absolute Maximum Ratings" says 30 mA is the limit.) $(3.3V - 0.7V)/20 mA = 130 \Omega$. I used 150 Ohm resistors because they were available.
![New Schematic](./images/lab01_schematic_redo.jpg)


## Testing Approach
I tested my code using an automated testbench. The clock just needed to be shown to oscillate to pass. The seven_segment_display was tested with each value from 0x0 to 0xF and compared to the truth table. The led logic was checked by passing in each of the 4 cases for each combination.
The first screenshot shows the oscillator and seven_segment logic; the second screenshot is a much longer timespan to show the 2.4Hz logic for led[2] based on counter[24].
![Oscillator and 7 segment logic](./images/lab1redo_testbench.png)
![led[2] toggling](./images/lab1_led2_testbench.png)

## Requirements
My lab meets both the Proficiency and the Excellence specs. If I were to continue to spend time on it, I would note that while the brightness is equal for all numbers, it is equally dim. I think it should be brighter but I might just need to power it off the 5V rail.

Number of hours spent: 15 + 2

## Comments for next time
I thought that I had started early enough, but I was incorrect! Part of that might have been the fact that I spent somewhere around 5-6 hours on the quarto assignement from the first week, which ate into my time for this lab. I'm fixing this problem by starting earlier this upcoming week. 
Also, I learned that reading over the lab specs will not give me a full idea of what the lab entails - I was excited to get started on my seven-segment display and the amount of demo tutorials hidden under the heading "Testing Your Board" caught me off guard. I'm fixing this issue by printing the lab on paper next week so I can see the whole thing and gauge accordingly.
This lab was waaaay easier the second time around when I fixed it for excellence after completing lab 2. I think I just needed more practice with the tools and workflow to be comfortable with it.